{"meta":{"title":"Amblizer","subtitle":"Mainframe","description":"Call me architect","author":"Amblizer","url":"http://amblizer.xyz"},"pages":[],"posts":[{"title":"SCU CSE 录取之后步骤[draft]","slug":"SCU-Memo","date":"2018-02-11T07:46:20.000Z","updated":"2018-02-11T09:53:28.015Z","comments":true,"path":"2018/02/11/SCU-Memo/","link":"","permalink":"http://amblizer.xyz/2018/02/11/SCU-Memo/","excerpt":"","text":"先贴上组织 SCU 2018 QQ Group: 699733238 SCU Global Telegram Group: https://t.me/SCUer SCU 2018 Wechat Group (If it expired let me know pls): 申请 I-20 表准备材料： I-20 申请表：点击下载 存款证明：2017-2018年度：$46,209，具体形式点击查看详情 护照扫描件 然后将以上材料发送至 gradengineer@scu.edu，I-20的发放通常需要15个工作日审核，美国境外的申请者会通过 FedEx 或 DHL 寄送。 付费，填写 DS-160 表格 填写 I-901 表格，付SEVIS费，点击填写 填写 DS-160 表格，点击填写 付费，预约面签 预约时间不能早于 I-20 上入学时间120天 最好用中信银行卡 准备好护照、DS-160、I-20，点击填写，费用160美元 面签必看材料： 护照 I-20 SEVIS 收据 预约面签付费确认 不一定看同样必须带的材料： 录取通知 存款证明（最近即可，无需冻结） TOEFL、GRE 成绩单 有助于消除移民倾向的材料： 个人简历 银行流水 在职证明、职业资格证书 和父母的照片 结婚证 还有到场后会发的准入证 不能带入美使领馆： 电子产品 F-1、B-2 面签注意： 英文打招呼，表明自己准备好语言能力 保持自信 问到毕业后计划，可以说会继续自己的职业，地方可以模糊一些 常见问题，可稍做准备，不要啰嗦： Why do you want to study in the U.S.? Which school are you going to? Why you choose this school? Who is paying for the study? What is your current job? And some follow-up detail questions about the job. What do you want to do after the study? Do you have any relative in U.S. ? Where are your parents and what do they do for a living? Do you have girlfriend/boyfriend? Are you married? Do you have children? How are you going to handle it if …(you decided to go for the study alone and be separated from the irlfriend/boyfriend, husband/wife/children, etc.) 赴美准备F-1 签证赴美时间可比I-20开学时间早至多30天 需随身携带： 护照原件 I-20原件 录取通知书 存款证明 随身药物对应的处方 少量现金 美标手机充电器 书面紧急联系人信息 书面出行计划 赴美当日过海关，准备： 存款证明 回答学校相关问题 地点 项目 就学期间住所 如何付学费 过关后： 确认取回护照和 I-20 原件 确认拿到I-94(Electronic Admission Record or I-94.) 出机场： SJC (San Jose Airport): 机场到学校有VTA免费班车，十几分钟 SFO (San Francisco International Airport): Bay Area Rapid Transit (BART) 和 Caltrain，90分钟 OAK (Oakland International Airport): 2.5小时","categories":[],"tags":[{"name":"Santa Clara University","slug":"Santa-Clara-University","permalink":"http://amblizer.xyz/tags/Santa-Clara-University/"},{"name":"SCU","slug":"SCU","permalink":"http://amblizer.xyz/tags/SCU/"}]},{"title":"千昌夫 - 北国の春","slug":"北国の春","date":"2018-02-08T16:00:00.000Z","updated":"2018-02-12T17:12:04.181Z","comments":true,"path":"2018/02/09/北国の春/","link":"","permalink":"http://amblizer.xyz/2018/02/09/北国の春/","excerpt":"","text":"北国の春 by 千昌夫 白樺（しら かば） 青空（あおぞら） 南風（みなみかぜ） こぶし咲（さく） あの丘（おか）北国（きたくに）の ああ 北国の春（はる） 季節（きせつ）が 都会（とかい）で はわからないだろと 届（とど）いた ふくろの 小（ちい）さな つつみ あの 故郷（ふるさと）へ 帰（かえ）ろかな 帰ろかな","categories":[{"name":"Song","slug":"Song","permalink":"http://amblizer.xyz/categories/Song/"},{"name":"Japanese","slug":"Song/Japanese","permalink":"http://amblizer.xyz/categories/Song/Japanese/"}],"tags":[{"name":"Japanese","slug":"Japanese","permalink":"http://amblizer.xyz/tags/Japanese/"}]},{"title":"テレサ．テン - 偿い","slug":"偿い","date":"2017-12-30T16:00:00.000Z","updated":"2018-02-13T08:15:41.866Z","comments":true,"path":"2017/12/31/偿い/","link":"","permalink":"http://amblizer.xyz/2017/12/31/偿い/","excerpt":"","text":"偿い by テレサ．テン var ap = new APlayer({ element: document.getElementById(\"aplayer1\"), narrow: false, autoplay: false, showlrc: 0, music: { title: \"つぐない\", author: \"テレサ・テン\", url: \"/2017/12/31/偿い/テレサ・テン%20-%20つぐない.mp3\", pic: \"\", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 窓（まど）に西日（にしび）が あたる部屋（へや）は いつもあなたの 匂（にお）いがすろわ 一人（ひとり）暮（く）らせば 思（おも）い出（だ）すから 壁（かべ）の傷（きず）も 残（のこ）したまま おいてゆくわ 愛をつぐなえば 别(わか)れになるけど こんな女（おんな）でも 忘（わす）れないでね 優（やさ）しいすぎたのあなた 子供（こども）見（み）たいなあなた 明日（あす）は他人同士（たにんどうし）に なるけれど 心(こころ)残(のこ)りは あなたのこと 少(すこ)し烟草(たばこ)も ひかえめにして 过去(かこ)に缚(しば)られ 暮(く)らすことより わたしよりも可爱(かわい)い人 探(さが)すことよ 爱(あい)をつぐなえば 重荷(おもに)になるから この町(まち)を离(はな)れ 暮(く)らしてみるわ お酒(さけ)のむのも ひとり 梦(ゆめ)を见(み)るのも ひとり 明日（あす）は他人同士（たにんどうし なるけれど 爱(あい)をつぐなえば 别(わか)れになるけど こんな女(おんな)でも 忘(わす)れないでね 優(やさ)しいすぎたのあなた 子供(こども)见(み)たいなあなた 明日(あす)は他人同志(たにんどうし)に なるけれど","categories":[{"name":"Song","slug":"Song","permalink":"http://amblizer.xyz/categories/Song/"},{"name":"Japanese","slug":"Song/Japanese","permalink":"http://amblizer.xyz/categories/Song/Japanese/"}],"tags":[{"name":"Japanese","slug":"Japanese","permalink":"http://amblizer.xyz/tags/Japanese/"}]},{"title":"Django First Met","slug":"Django-First-Met","date":"2017-12-04T16:00:00.000Z","updated":"2018-02-11T09:03:24.444Z","comments":true,"path":"2017/12/05/Django-First-Met/","link":"","permalink":"http://amblizer.xyz/2017/12/05/Django-First-Met/","excerpt":"","text":"Django First MetAs demanded by my instructor, I need to grab the essence of Django in three weeks, which is not quite possible for a non-native CS candidate. Still, I struggled to follow the instructions given in the official document, and, well, not THAT official, that I’m actually doing a step by step tutorial in mandarin, which lags in the version of 1.10.5 instead of the newly announced 2.0. But this doesn’t trouble me at all since Anaconda also doesn’t provide the latest 2.0 update in the repertoire. So I just began. Implementing Virtual environmentI heard that functions in Django differ across various versions, and to save the trouble I implemented in virtual envs in Anaconda. Simply create a new env use: &gt;conda create -n Django1 Activate it: &gt;activate Django1 And install the proper version of Django: (django1) &gt;conda install Django=1.10.5 Create Django ProjectIn workspace directory, use: (django1) &gt;django-admin startproject blogproject Be sure to stay in the virtual env. Test the serverTo start the local server iIn blogproject directory use: (django1) &gt;python manage.py runserver Then visit localhost:8000 in a browser.","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://amblizer.xyz/tags/python/"},{"name":"django","slug":"django","permalink":"http://amblizer.xyz/tags/django/"}]},{"title":"中岛みゆき - 竹の歌","slug":"Bamboo-Song","date":"2017-11-01T16:00:00.000Z","updated":"2018-02-12T17:16:46.093Z","comments":true,"path":"2017/11/02/Bamboo-Song/","link":"","permalink":"http://amblizer.xyz/2017/11/02/Bamboo-Song/","excerpt":"","text":"竹の歌 by 中岛みゆき Started to learn Japanese, hiragana seems a bit of troubling of its resembling of mandarin characters. Though being nervous these days, Jap songs, especially those from 80s and 90s, comfort me most, and it is an major cause for me to learn the language. So start with a rather easy one, the bamboo song by Miyuki Nakajima 遥（はる）かな山（やま）から吹（ふ）きつける風（かぜ）に ひれ伏（ふ）しながら けして折（お）れはせぬ 押（お）し寄（よ）せる雲（くも）から打ちやまぬ雨（あめ）に ひれ伏（ふ）しながら けして折（お）れはせぬ 私（わたし）がなりたいものはといえば 地下（ちか）に根（ね）を張（は）る あの竹林（たけばやし） 月（つき）の日（ひ） 火（ひ）の日（ひ） 水（みず）の日（ひ） 木（き）の日（ひ） 金（がね）に踊（おど）って 土（つち）と日（ひ）に還（かえ）る 私（わたし）が住（す）みたい国（くに）はといえば 地下（ちか）に根（ね）を張（は）る あの竹（たけ）の国（くに） ゆく夏（なつ）来（く）る夏（なつ） 照（で）りつける熱（ねつ）に 埋（う）ずもれながら けして消（き）えはせぬ 青（あお）に黄（き）に緑（みどり）に 移（うつ）りゆく旗（はた）に 移（うつ）ろいながら けして消（き）えはせぬ 私（わたし）が覚（おぼ）えて残（のこ）せるものは 地下（ちか）に根（ね）を張（は）る あの竹（たけ）の歌（うた） 月（つき）の日（ひ） 火（ひ）の日（ひ） 水（みず）の日（ひ） 木（き）の日（ひ） 金（がね）に踊（おど）って 土（つち）と日（ひ）に還（かえ）る 私（わたし）が覚（おぼ）えて残（のこ）せるものは 地下（ちか）に根（ね）を張（は）る あの竹（たけ）の歌（うた） 月（つき）の日（ひ） 火（ひ）の日（ひ） 水（みず）の日（ひ） 木（き）の日（ひ） 金（がね）に踊（おど）って 土（つち）と日（ひ）に還（かえ）る 私（わたし）がなりたいものはといえば 地下（ちか）に根（ね）を張（は）る あの竹林（たけばやし）","categories":[{"name":"Song","slug":"Song","permalink":"http://amblizer.xyz/categories/Song/"},{"name":"Japanese","slug":"Song/Japanese","permalink":"http://amblizer.xyz/categories/Song/Japanese/"}],"tags":[{"name":"Japanese","slug":"Japanese","permalink":"http://amblizer.xyz/tags/Japanese/"}]},{"title":"Saving loop 保存与循环","slug":"Saving loop 保存与循环","date":"2017-06-09T16:00:00.000Z","updated":"2018-02-12T01:37:49.542Z","comments":true,"path":"2017/06/10/Saving loop 保存与循环/","link":"","permalink":"http://amblizer.xyz/2017/06/10/Saving loop 保存与循环/","excerpt":"","text":"#Saving loop 保存与循环 The loop ends only when successively saved 123456789while unsaved: try: wb.save(fn) unsaved = False except PermissionError: print(fn, 'in use, close and press enter to save again...') input() continue anything else？","categories":[{"name":"Computer","slug":"Computer","permalink":"http://amblizer.xyz/categories/Computer/"},{"name":"Programming","slug":"Computer/Programming","permalink":"http://amblizer.xyz/categories/Computer/Programming/"}],"tags":[{"name":"python","slug":"python","permalink":"http://amblizer.xyz/tags/python/"},{"name":"save","slug":"save","permalink":"http://amblizer.xyz/tags/save/"}]},{"title":"Windows 10 安装 Cuda 8 + CuDNN 6, Tensorflow 和 keras，附CPU/GPU切换小技巧","slug":"Windows-10-Cuda-Tensorflow-Keras","date":"2017-05-31T16:00:00.000Z","updated":"2018-02-12T01:38:23.219Z","comments":true,"path":"2017/06/01/Windows-10-Cuda-Tensorflow-Keras/","link":"","permalink":"http://amblizer.xyz/2017/06/01/Windows-10-Cuda-Tensorflow-Keras/","excerpt":"","text":"Install Cuda 8 + CuDNN 6, Tensorflow and Keras on Windows 10, methods to switch between CPU and GPU attached[Windows 10 安装 Cuda 8 + CuDNN 6, Tensorflow 和 keras，附CPU/GPU切换小技巧] Updated: Dec 29, 2017 Originally published on Amblizer.xyz, reblogged in case of blocking I’ve tried months ago to install the GPU-based Machine learning framework, namely keras with tensorflow, but get stuck following the official indication of the latter, and the issue remained unresolved until yesterday because of loads of patients in summer vocation, and I finally managed to get m1000m working. I basically followed instructions written in Chinese in http://blog.csdn.net/u012898521/article/details/69611800, with a few modifications according to keras documentation in Chinese HERE, and actually I did a combination of both. Step 1 - Python with AnacondaBy far tensorflow only support python 3 but no newer than major version of 3.5, and last time I got a lot of trouble tried to install the dependencies especially scipy. I didn’t use anaconda because it starts rather slow and Google said you could install tensorflow without it, and it was later I found scipy itself WILL encounter problems when installed on windows. Just download and intall Anaconda 5.0 with python 3, Simply install Anaconda with python 3.5 (I installed Anaconda 4.2.0 with python 3.5.2) 3.6, and it will save you all the troubles. Step 2 — CUDA and CuDNNNVIDIA had buried download links to older version of CUDA and CuDNN, so I list the links chart first. Package Compatible with Link CUDA 9.1 self-compiled Tensor Flow Click to download CUDA 8.0.61 &amp; prior TensorFlow Click to download CuDNN 6 TensorFlow Click to download CuDNN 5 &amp; prior Theano, etc Click to download CUDA is toolkit enables you to all the fun programming with NVIDIA GPU, you’re welcomed unless your GPU is prior to GTX 500 series. You’re encouraged to download CUDA 8.0.61 and CuDNN 6 in order to drive TensorFlow 1.4, and you’ll find it somewhat time consuming. Installation is simple a series of ‘Next’s. And now you can install CuDNN, an acceleration library for CUDA. You’ll require to signed a developer account in order to get it HERE, and then unzip the folders and overwrite folders at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\8.0 with same names. Step 3 — Ananconda Environment &amp; TensorflowSimply use pip with installation. Create an Ananconda environment named “tf” using: &gt;conda create -n tf And activate the envirionmant by: &gt;activate tf Then the command shows: (tf) C:\\Users\\username&gt;_ which indicates that you have entered the newly create environment. By using the environment, we can capsule our manuvours within the very space, without influencing that global configuration of the whole system. This is especally useful when you’re testing different versions of same software packages, say, using python 3.5 &amp; 3.6 samultanously. To install CPU version(required): (tf) C:\\Users\\username&gt;conda install tensorflow Test the CPU version tensorflow: (tf) C:\\Users\\username&gt;python &gt;&gt;&gt;import tensorflow as tf To install GPU version(optional) (tf) C:\\Users\\username&gt;conda install tensorflow-gpu Restart first and then test the GPU version tensorflow: (tf) C:\\Users\\username&gt;python &gt;&gt;&gt;import tensorflow as tf Step 4 — KerasA line of code will do (tf) C:\\Users\\username&gt;conda install keras Keras will be installed with theano by default, but it will use tensorflow as the back-end, so don’t panic, and test if keras is installed correctly by (tf) C:\\Users\\username&gt;python &gt;&gt;&gt;import keras Now we could run the MNIST example in Keras with either CPU or GPU Step 5 — Run and switch between CPU and GPUDownload keras testing data sets HERE, or if you have git run 1git clone https://github.com/fchollet/keras.git Locate at keras/examples/, and run mnist_mlp.py, if you installed CUDA and CuDNN correctly, it will run on GPU by default, and here’s my running on GPU: Sadly I only have a M1000M on the laptop, of which the performance is compromised.","categories":[{"name":"Computer","slug":"Computer","permalink":"http://amblizer.xyz/categories/Computer/"},{"name":"Deep Learning","slug":"Computer/Deep-Learning","permalink":"http://amblizer.xyz/categories/Computer/Deep-Learning/"}],"tags":[{"name":"alphabet","slug":"alphabet","permalink":"http://amblizer.xyz/tags/alphabet/"},{"name":"python","slug":"python","permalink":"http://amblizer.xyz/tags/python/"}]},{"title":"alphabet in a line","slug":"alphabet in a line","date":"2017-02-14T16:00:00.000Z","updated":"2018-02-12T01:37:41.770Z","comments":true,"path":"2017/02/15/alphabet in a line/","link":"","permalink":"http://amblizer.xyz/2017/02/15/alphabet in a line/","excerpt":"","text":"#List12&gt;&gt;&gt; [chr(i) for i in range(97,123)]['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] #String12&gt;&gt;&gt; ''.join([chr(i) for i in range(97,123)])'abcdefghijklmnopqrstuvwxyz' #two lines123&gt;&gt;&gt; import string&gt;&gt;&gt; string.ascii_lowercase'abcdefghijklmnopqrstuvwxyz' #dict两句话12&gt;&gt;&gt; dict.fromkeys(string.ascii_lowercase, 0)&#123;'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0&#125; Fun isn’t it!","categories":[{"name":"Computer","slug":"Computer","permalink":"http://amblizer.xyz/categories/Computer/"},{"name":"Programming","slug":"Computer/Programming","permalink":"http://amblizer.xyz/categories/Computer/Programming/"}],"tags":[{"name":"alphabet","slug":"alphabet","permalink":"http://amblizer.xyz/tags/alphabet/"},{"name":"python","slug":"python","permalink":"http://amblizer.xyz/tags/python/"}]},{"title":"Fisher–Yates shuffle","slug":"Fisher–Yates shuffle","date":"2017-01-31T16:00:00.000Z","updated":"2018-02-12T01:36:23.822Z","comments":true,"path":"2017/02/01/Fisher–Yates shuffle/","link":"","permalink":"http://amblizer.xyz/2017/02/01/Fisher–Yates shuffle/","excerpt":"","text":"#第一篇博，写点什么 Fisher–Yates shuffle 作为编程新手，又非本专业所学，在github上写博客似乎不自量力。然而记录本身也是学习的一部分，而这记录非此处不能写，那就开始吧。 在 w3cplus 看到洗牌算法似乎十分有趣，试着用python练习一下： 12345678910111213141516171819def shuffle(s): import random ''' From last item to first item, change position with a random item before it. s: list of items ''' i = len(s) - 1 while i &gt; 0: ran = random.sample(range(i),1)[0] (s[ran],s[i]) = (s[i],s[ran]) i -= 1 return s&gt;&gt;&gt;shuffle(\"['1', '2', '3', '4', '5', '6', '7', '8', '9']\")['4', '7', '8', '6', '1', '2', '3', '9', '5']&gt;&gt;&gt;shuffle(\"['1', '2', '3', '4', '5', '6', '7', '8', '9']\")['8', '3', '1', '2', '9', '7', '4', '5', '6']&gt;&gt;&gt;shuffle(\"['1', '2', '3', '4', '5', '6', '7', '8', '9']\")['9', '7', '1', '3', '2', '8', '4', '5', '6'] 还是挺好玩的嘛！","categories":[{"name":"Computer","slug":"Computer","permalink":"http://amblizer.xyz/categories/Computer/"},{"name":"Programming","slug":"Computer/Programming","permalink":"http://amblizer.xyz/categories/Computer/Programming/"}],"tags":[{"name":"python","slug":"python","permalink":"http://amblizer.xyz/tags/python/"},{"name":"Fisher–Yates shuffle","slug":"Fisher–Yates-shuffle","permalink":"http://amblizer.xyz/tags/Fisher–Yates-shuffle/"},{"name":"algorithm","slug":"algorithm","permalink":"http://amblizer.xyz/tags/algorithm/"}]},{"title":"Win 10 廉价指纹方案：EgisTec ES603","slug":"Win10-Fingerprint","date":"2016-03-16T05:13:43.000Z","updated":"2018-02-13T05:46:42.845Z","comments":true,"path":"2016/03/16/Win10-Fingerprint/","link":"","permalink":"http://amblizer.xyz/2016/03/16/Win10-Fingerprint/","excerpt":"","text":"​​最近突然有给电脑配指纹验证的想法，经过一番折腾，最后百元之内完美启用Wind 10 hello的指纹登陆。 硬件：EgisTec ES603，淘宝搜索即可，70元左右 驱动：这一步是关键，随机附带的驱动为非WBF（Windows Biometric Framework）版本，只能通过第三方软件配合使用。一番搜索后发现此模块和TravelMate P446-M的指纹模块驱动一致，恰巧Acer在官网发布了其支持Win 10 x64的WBF版本驱动，下载安装后重启即可。进入登陆选项，设置Pin之后即可使用，如下图： 点击下载驱动 嗯，的确是物美价廉。​​​​","categories":[{"name":"Computer","slug":"Computer","permalink":"http://amblizer.xyz/categories/Computer/"},{"name":"Hardware","slug":"Computer/Hardware","permalink":"http://amblizer.xyz/categories/Computer/Hardware/"}],"tags":[{"name":"Fingerprint","slug":"Fingerprint","permalink":"http://amblizer.xyz/tags/Fingerprint/"},{"name":"Windows 10","slug":"Windows-10","permalink":"http://amblizer.xyz/tags/Windows-10/"}]}]}