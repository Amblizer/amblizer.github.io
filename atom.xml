<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amblizer&#39;s Mainframe</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://amblizer.xyz/"/>
  <updated>2018-10-31T18:10:54.488Z</updated>
  <id>http://amblizer.xyz/</id>
  
  <author>
    <name>Amblizer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SCOM - Agent and Management Packs</title>
    <link href="http://amblizer.xyz/2018/10/28/SCOM-push-agent/"/>
    <id>http://amblizer.xyz/2018/10/28/SCOM-push-agent/</id>
    <published>2018-10-28T16:00:00.000Z</published>
    <updated>2018-10-31T18:10:54.488Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Procedures notes on deployment of SCOM agents and MPs.</p><h2 id="Push-Agent"><a href="#Push-Agent" class="headerlink" title="Push Agent"></a>Push Agent</h2><p>Pushing steps are primarily base on default setting.</p><a id="more"></a><ol><li><p>Log on to SCOM as an Administrators role, and open <strong>Discovery Wizard</strong> at the left bottom of Administrator panel.</p><img src="/2018/10/28/SCOM-push-agent/scom-1.png"></li><li><p>Choose <strong>Windows computers</strong>.</p><img src="/2018/10/28/SCOM-push-agent/scom-2.png"></li><li><p>Select <strong>Advanced discovery</strong> for specific search. Choose <strong>Servers and Clients</strong>, make sure <strong>Verify discovered computers can be contacted</strong> is checked.</p><img src="/2018/10/28/SCOM-push-agent/scom-3.png"></li><li><p>Select proper discovery method, I actually chose <strong>Scan Active Directory</strong>.</p><img src="/2018/10/28/SCOM-push-agent/scom-4.png"></li><li><p>Make sure the account have administrative privileges.</p><img src="/2018/10/28/SCOM-push-agent/scom-5.png"></li><li><p>Check the clients you want to manage.</p><img src="/2018/10/28/SCOM-push-agent/scom-6.png"></li><li><p>Click <strong>Finish</strong>, and the agent status can be seen in the dialog box</p></li></ol><h2 id="Import-Management-Packs"><a href="#Import-Management-Packs" class="headerlink" title="Import Management Packs"></a>Import Management Packs</h2><ol><li><p>Choose <strong>Updates and Recommendations</strong> in Administrator panel, then click <strong>Get ALL MPs</strong> at the right.</p><img src="/2018/10/28/SCOM-push-agent/scom-.png"></li><li><p>If there’s any component still not monitored, do last step again.</p></li><li><p>Mind following MPs:</p><ul><li>Microsoft Windows Cluster Management Library, install 10.0.6.0 version instead of 6.0.7063.0.</li></ul></li></ol><p>(Ref: <a href="https://docs.microsoft.com/en-us/system-center/scom/manage-deploy-windows-agent-console?view=sc-om-1807" target="_blank" rel="noopener">M$ SCOM Documents</a>, <a href="https://mytechguideblog.wordpress.com/2015/11/13/scom-agent-installation-discovery-method/" target="_blank" rel="noopener">SCOM Agent Installation – Discovery Method</a>)</p><!-- link -->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Procedures notes on deployment of SCOM agents and MPs.&lt;/p&gt;
&lt;h2 id=&quot;Push-Agent&quot;&gt;&lt;a href=&quot;#Push-Agent&quot; class=&quot;headerlink&quot; title=&quot;Push Agent&quot;&gt;&lt;/a&gt;Push Agent&lt;/h2&gt;&lt;p&gt;Pushing steps are primarily base on default setting.&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://amblizer.xyz/categories/Server/"/>
    
    
      <category term="System Center" scheme="http://amblizer.xyz/tags/System-Center/"/>
    
      <category term="Operations Manager" scheme="http://amblizer.xyz/tags/Operations-Manager/"/>
    
      <category term="SCOM" scheme="http://amblizer.xyz/tags/SCOM/"/>
    
  </entry>
  
  <entry>
    <title>Upgrade SCOM from 2012 r2 UR14 to 2016</title>
    <link href="http://amblizer.xyz/2018/10/26/SCOM-upgrade/"/>
    <id>http://amblizer.xyz/2018/10/26/SCOM-upgrade/</id>
    <published>2018-10-26T16:00:00.000Z</published>
    <updated>2018-10-29T17:17:35.752Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h2 id="Pre-Upgrade"><a href="#Pre-Upgrade" class="headerlink" title="Pre-Upgrade"></a>Pre-Upgrade</h2><ol><li><p>Review the Operations Manager event logs, save a copy.</p></li><li><p>Cleanup the ETL table, use scripts below on OM db.</p></li></ol><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- (c) Copyright 2004-2006 Microsoft Corporation, All Rights Reserved         --</span></span><br><span class="line"><span class="comment">-- Proprietary and confidential to Microsoft Corporation                      --       </span></span><br><span class="line"><span class="comment">-- File:      CatchupETLGrooming.sql                                          --</span></span><br><span class="line"><span class="comment">-- Contents: A bug in the ETL grooming code could have left the customer      --</span></span><br><span class="line"><span class="comment">-- Database with a large amount of ETL rows to groom. This script will groom   --</span></span><br><span class="line"><span class="comment">-- The ETL entries in a loop 100K rows at a time to avoid filling up the        --</span></span><br><span class="line"><span class="comment">-- Transaction log                                                             --</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">DECLARE</span> @RowCount <span class="built_in">int</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @BatchSize <span class="built_in">int</span> = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @SubscriptionWatermark <span class="built_in">bigint</span> = <span class="number">0</span>;     </span><br><span class="line"><span class="keyword">DECLARE</span> @LastErr <span class="built_in">int</span>;</span><br><span class="line"><span class="comment">-- Delete rows from the EntityTransactionLog. We delete the rows with TransactionLogId that aren't being</span></span><br><span class="line"><span class="comment">-- used anymore by the EntityChangeLog table and by the RelatedEntityChangeLog table.</span></span><br><span class="line"><span class="keyword">SELECT</span> @SubscriptionWatermark = dbo.fn_GetEntityChangeLogGroomingWatermark();</span><br><span class="line">WHILE(@RowCount &gt; 0)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DELETE</span> TOP(@BatchSize) ETL  </span><br><span class="line">  <span class="keyword">FROM</span> EntityTransactionLog ETL</span><br><span class="line">  <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> EntityChangeLog ECL <span class="keyword">WHERE</span> ECL.EntityTransactionLogId = ETL.EntityTransactionLogId) <span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> RelatedEntityChangeLog RECL</span><br><span class="line">  <span class="keyword">WHERE</span> RECL.EntityTransactionLogId = ETL.EntityTransactionLogId)</span><br><span class="line">  <span class="keyword">AND</span> ETL.EntityTransactionLogId &lt; @SubscriptionWatermark;        </span><br><span class="line">  <span class="keyword">SELECT</span> @LastErr = @@<span class="keyword">ERROR</span>, @RowCount = @@ROWCOUNT;            </span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><ol><li><p>Remove Agents from pending management</p><ul><li>In the Administration pane, expand Device Management, and then click Pending Management.</li><li>Right-click each agent, and then click Approve or Reject.</li></ul></li><li><p>Disable notification subscriptions</p><ul><li>Also in Administration view, expand Administration, expand the Notifications container, and then click Subscriptions.</li><li>Select each subscription, and then click Disable in the Actions pane. (Do not try to multi select)</li></ul></li><li><p>Verify the OM database has more than 50 percent free</p><ul><li>Open SSMS, expand Databases and right-click the OperationsManager database, select to Reports, Standard Reports, and then click Disk Usage.</li><li>View the Disk Usage report. If the database does not have 50 percent free, right-click the OperationsManager database, and then click Properties. </li><li>Under Select a page, click Files. In the results pane, increase the Initial Size value for the MOM_DATA database by 50 percent.</li></ul></li><li><p>Backup the OM databases (If not backup regularly)</p></li><li><p>Stop Operations Manager services</p></li><li><p>Increase agent HealthService cache size</p><ul><li>Update the following registry setting on the agents: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlsSet\Services\HealthService\Parameters\Management Groups&lt;ManagementGroupName&gt;\maximumQueueSizeKb</code></li><li>Default is 15360 (15 MB), change it to is 76800 (75 MB).</li><li>Reset it back after upgrading.</li></ul></li></ol><h2 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h2><h2 id="Post-Upgrade"><a href="#Post-Upgrade" class="headerlink" title="Post-Upgrade"></a>Post-Upgrade</h2><ol><li><p>Re-enable the Notification Subscriptions</p></li><li><p>Reset agent HealthService Cache size</p></li><li><p>Verify the upgrade was successful</p></li></ol><h2 id="Next-Step"><a href="#Next-Step" class="headerlink" title="Next Step"></a>Next Step</h2><ol><li>See <a href="https://amblizer.xyz/2018/10/28/SCOM-push-agent/">SCOM - Push Agent</a></li><li>Get familiar to other management packs</li></ol><p>(Ref: <a href="https://docs.microsoft.com/en-us/system-center/scom/deploy-upgrade-overview?view=sc-om-2016" target="_blank" rel="noopener">M$ SCOM Documents</a>)</p><!-- link -->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Pre-Upgrade&quot;&gt;&lt;a href=&quot;#Pre-Upgrade&quot; class=&quot;headerlink&quot; title=&quot;Pre-Upgrade&quot;&gt;&lt;/a&gt;Pre-Upgrade&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Review the Operations Manager event logs, save a copy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cleanup the ETL table, use scripts below on OM db.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Server" scheme="http://amblizer.xyz/categories/Server/"/>
    
    
      <category term="System Center" scheme="http://amblizer.xyz/tags/System-Center/"/>
    
      <category term="Operations Manager" scheme="http://amblizer.xyz/tags/Operations-Manager/"/>
    
      <category term="SCOM" scheme="http://amblizer.xyz/tags/SCOM/"/>
    
  </entry>
  
  <entry>
    <title>CS61A 2018 Pathway</title>
    <link href="http://amblizer.xyz/2018/03/02/CS61A/"/>
    <id>http://amblizer.xyz/2018/03/02/CS61A/</id>
    <published>2018-03-03T00:11:56.000Z</published>
    <updated>2018-10-29T08:19:25.574Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>This is my learning path of CS 61A, you can check at <a href="https://github.com/Amblizer/CS-61A-Structure-and-Interpretation-of-Computer-Programs" target="_blank" rel="noopener"><em>my github repository</em></a> for slides.</p><p>ref: <a href="http://mitpress.mit.edu/sicp" target="_blank" rel="noopener">Structure and Interpretation of Computer Programs</a></p><p>Spring 2018</p><p>Instructor: John DeNero</p><!-- links --><a id="more"></a><h2 id="Pooling-Chart"><a href="#Pooling-Chart" class="headerlink" title="Pooling Chart"></a>Pooling Chart</h2><table><thead><tr><th>Lecture</th><th>Reading</th><th>Note</th><th>Handout</th><th>Homework</th></tr></thead><tbody><tr><td><a href="https://www.youtube.com/watch?v=v5CP0zpYUcw&amp;list=PL6BsET-8jgYUV8Jxv0D7BLxbg-xIkh0vk&amp;vq=hd1080" target="_blank" rel="noopener">Functions</a></td><td><a href="http://composingprograms.com/pages/11-getting-started.html" target="_blank" rel="noopener">1.1</a>, <a href="http://composingprograms.com/pages/12-elements-of-programming.html" target="_blank" rel="noopener">1.2</a></td><td><a href="https://amblizer.xyz/2018/03/02/cs61a/#1-1-start">Note 1</a></td><td><a href="https://github.com/Amblizer/CS-61A-Structure-and-Interpretation-of-Computer-Programs/tree/master/lab00/" target="_blank" rel="noopener">Lab 00: Introduction &amp; Workflow</a></td></tr><tr><td><a href="https://www.youtube.com/watch?v=hdVG0P11G94&amp;list=PL6BsET-8jgYW16P20tNV8hwpBUiCyQB5c&amp;vq=hd1080" target="_blank" rel="noopener">Names</a></td><td><a href="http://composingprograms.com/pages/13-defining-new-functions.html" target="_blank" rel="noopener">1.3</a>, <a href="http://composingprograms.com/pages/14-designing-functions.html" target="_blank" rel="noopener">1.4</a></td><td><a href="https://amblizer.xyz/2018/03/02/cs61a/#1-3-define-functions">Note 2</a></td><td><a href="https://github.com/Amblizer/CS-61A-Structure-and-Interpretation-of-Computer-Programs/tree/master/disc00/" target="_blank" rel="noopener">Disc 00: Lost on the Moon</a></td><td><a href="https://github.com/Amblizer/CS-61A-Structure-and-Interpretation-of-Computer-Programs/tree/master/hw01/" target="_blank" rel="noopener">HW 01</a></td></tr></tbody></table><!-- links --><!-- TOC --><ul><li><a href="#pooling-chart">Pooling Chart</a></li><li><a href="#suggested-accompany">suggested accompany</a></li><li><a href="#1-1-start">1-1 start</a></li><li><a href="#1-2-elements-of-programming">1-2 elements of programming</a></li><li><a href="#1-3-define-functions">1-3 define functions</a></li><li><a href="#1-4-designing-functions">1-4 designing functions</a></li><li><a href="#1-5-control">1-5 control</a></li></ul><!-- /TOC --><img src="/2018/03/02/CS61A/cs61a.jpg"><h2 id="suggested-accompany"><a href="#suggested-accompany" class="headerlink" title="suggested accompany"></a>suggested accompany</h2><ul><li><a href="http://data8.org/" target="_blank" rel="noopener">Data8</a> for data science, of fundamentals of computing, statistical inference, &amp; machine learning applied to real-world data setsmachine learning, with ore statistics than computer science. A great programming practice for CS 61A</li></ul><h2 id="1-1-start"><a href="#1-1-start" class="headerlink" title="1-1 start"></a>1-1 start</h2><ol><li><p>Priciples: beauty, simplicity and readability</p></li><li><p>Definitions:</p><ul><li>Statements: codes usually describe actions</li><li>Expressions: codes do computations</li><li>Functions: a box of series of statements and/or expressions</li><li>Objects: data and its unalienable properties</li><li><p>Interpreters: to evaluate compound expressions in a predictable way</p><blockquote><p>functions are objects, objects are functions, and interpreters are instances of both.</p></blockquote></li></ul></li><li><p>Expect errors:</p><ul><li>Debugging: know error itself and dignose it</li><li><p>Priciples of debugging:</p><ul><li>Test incrementally, identify probles early and easily</li><li>Isolate errors, localise according to output</li><li>Check assumptions, make sure assumptions check with codes precisely</li><li><p>Peer consulting, chart of valuable helpers</p><p>  Name|Specialize<br>  —|—<br>  <a href="https://docs.python.org/3/index.html" target="_blank" rel="noopener">Official Py Documentation</a>|Everything</p></li></ul></li></ul></li></ol><blockquote><p>The fundamental equation of computers is:</p><p>computer = powerful + stupid</p><p>Programming is about a person using their real insight to build something that the computer can do.</p><p>— Francisco Cai and Nick Parlante, Stanford CS101</p></blockquote><!-- links --><h2 id="1-2-elements-of-programming"><a href="#1-2-elements-of-programming" class="headerlink" title="1-2 elements of programming"></a>1-2 elements of programming</h2><ol><li><p>Aims programming serves:</p><ul><li>instruction to a computer</li><li>a framework of ideas, which is mor important</li></ul></li><li><p>Notice means to combine simple expresions and statement to complex combination and abstractions</p></li><li><p>Expression: operators and operands</p><ul><li>with infix notation, eg. 1/2 + (1/4 + 1/8 + 1/16) + 1/32 + 1/64 + 1/128</li><li>with function notaton, eg. max(min(1, -2), min(pow(3, 5), -4)), and have <strong>THREE</strong> advantages over infix ones:<ul><li>arbitary number of arguments</li><li>nested expressions in a straightforward way</li><li>easy to type, no limit to kinds</li></ul></li></ul></li><li><p>Definitions:</p><ul><li>‘=’: assignment operator</li><li>names: variable nams</li><li>trees: grow from the top down</li></ul></li><li><p>Pure and non-pure functions</p><ul><li><em>Pure function</em> have no side effects beyond return a value, call it for arbitary times with the same arguments must return same values.</li><li><em>Non-pure function</em> have side effects</li><li>Advantages of pure over non-pure:<ul><li>more reliable to compose</li><li>simpler to test</li><li>essential for concurrent programs</li></ul></li></ul></li></ol><blockquote><p><em>The Zen of Python</em> by Tim Peters</p><p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one– and preferably only one –obvious way to &gt;do it.<br>Although that way may not be obvious at first unless you’re &gt;Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good &gt;idea.<br>Namespaces are one honking great idea – let’s do more of those!</p></blockquote><h2 id="1-3-define-functions"><a href="#1-3-define-functions" class="headerlink" title="1-3 define functions"></a>1-3 define functions</h2><ol><li><p>A function have signature and body</p><ul><li>Singature have all variebles needed</li><li>body indict expressions and statements</li></ul></li><li><p>Names of variebles remain local within function bodies</p></li><li><p>Choosing names: essential to the interpretability, and usually follow simple rules:</p><ul><li>lowercase, words separated by underscores, good to be descriptive</li><li>parameter names should be lowercase, in single word, and meaningful</li></ul></li><li><p>A helper function can be write at a a later time in the function</p></li><li><p>Functional abstracion:</p><ul><li>Domain:</li><li>Range:</li><li>Intention:</li></ul></li></ol><blockquote><p>A programmer should not need to know how the function is implemented in order to use it</p></blockquote><h2 id="1-4-designing-functions"><a href="#1-4-designing-functions" class="headerlink" title="1-4 designing functions"></a>1-4 designing functions</h2><ol><li><p>Functions are abstractions:</p><ul><li>Single job for each function, with a shortname and a short description</li><li>Don’t repeat, abstract</li><li>Generally defined, considering broader usage.</li></ul></li><li><p>Use docstring, triple quoted:</p><ul><li>First line: job of the function</li><li>Following lines: argument and behavior</li><li>Use <em>help(function)</em> to see the docstring</li><li>Write docstrings for all functions necessary</li></ul></li></ol><blockquote><p>Code is written only once, but often read many times.</p></blockquote><ol><li><p>Comments: attached following the # symbol, fr humans alone</p></li><li><p>Values should be assigned defauts in most cases.</p></li></ol><h2 id="1-5-control"><a href="#1-5-control" class="headerlink" title="1-5 control"></a>1-5 control</h2><ol><li>Definitions<ul><li>Statement: to change thethe interpreter state</li><li>Clause: a header and an indented suit of statemtns, and a suite is controlled by a header</li><li>Compound Statement: consists of arbitary number of clauses</li><li>Execution rule: excuted in order, end by redirection to  control</li><li>Modular Programs: where pure functions interact only via the values they take and return.</li></ul></li></ol><blockquote><p>To execute a sequence of statements, execute the first statement. If that statement does not redirect control, then proceed to execute the rest of the sequence of statements, if any remain.</p></blockquote><ol><li><p>Local Assignment: bind a name to a value within the local frame</p></li><li><p>Conditional statements: conditional statements, bool contexts, bool values</p></li><li><p>Iteration</p></li><li><p>Testing</p><ul><li>Assert statments: followed by a bool expression, and a text for <em>FALSE</em>, proceeded to next only when expectation is met.</li><li>Doctests: seperate by a blank line from the description</li><li>Unit Test: test that applies a single function, should be exhaustive.</li><li>Key: test immediately after implementing</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is my learning path of CS 61A, you can check at &lt;a href=&quot;https://github.com/Amblizer/CS-61A-Structure-and-Interpretation-of-Computer-Programs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;my github repository&lt;/em&gt;&lt;/a&gt; for slides.&lt;/p&gt;
&lt;p&gt;ref: &lt;a href=&quot;http://mitpress.mit.edu/sicp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Structure and Interpretation of Computer Programs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring 2018&lt;/p&gt;
&lt;p&gt;Instructor: John DeNero&lt;/p&gt;
&lt;!-- links --&gt;
    
    </summary>
    
      <category term="Academic" scheme="http://amblizer.xyz/categories/Academic/"/>
    
    
      <category term="python" scheme="http://amblizer.xyz/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SCU CSE 录取之后步骤 Post-admission Handbook</title>
    <link href="http://amblizer.xyz/2018/02/11/SCU-Memo/"/>
    <id>http://amblizer.xyz/2018/02/11/SCU-Memo/</id>
    <published>2018-02-11T23:46:20.000Z</published>
    <updated>2018-10-29T08:03:53.036Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h2 id="先贴上组织-Groupchat-for-Santa-Clara-University"><a href="#先贴上组织-Groupchat-for-Santa-Clara-University" class="headerlink" title="先贴上组织 | Groupchat for Santa Clara University"></a>先贴上组织 | Groupchat for Santa Clara University</h2><ol><li>SCU 2018 QQ Group: 699733238</li><li>SCU Global Telegram Group: <a href="https://t.me/SCUer" target="_blank" rel="noopener">https://t.me/SCUer</a></li><li>SCU 2018 Wechat Group (If it expired let me know pls):</li></ol><img src="/2018/02/11/SCU-Memo/SCUWeChat.jpg"><a id="more"></a><img src="/2018/02/11/SCU-Memo/Bronco.jpg"><h2 id="申请-I-20-表-I-20-Prerequisites"><a href="#申请-I-20-表-I-20-Prerequisites" class="headerlink" title="申请 I-20 表 | I-20 Prerequisites"></a>申请 I-20 表 | I-20 Prerequisites</h2><p><em><strong>2018年02月27日更新：</strong></em></p><p><em>刚收到 SCU 邮件，要求等4月底 estimated expense 更新后再寄送材料。因为更新后需要的存款证明数额有可能发生变化，如果想现在开证明建议多开一些数额。</em></p><p>准备材料 | Paperworks:</p><ol><li><p>I-20 申请表 | I-20 request：<a href="https://www.scu.edu/media/offices/global-engagement/iss/forms/I-20-Request-Form-2016.pdf" target="_blank" rel="noopener">点击下载</a></p></li><li><p>存款证明 | funding proof: <a href="https://www.scu.edu/globalengagement/international-students/apply-and-getting-started/immigration-process/proof-of-funding-requirements/" target="_blank" rel="noopener"><del>2017-2018年度：$46,209，具体形式点击查看详情</del> 等待4月底更新</a></p></li><li><p>护照扫描件 | passport scan</p></li></ol><p>然后将以上材料发送至 <a href="mailto:gradengineer@scu.edu" target="_blank" rel="noopener">gradengineer@scu.edu</a>，I-20的发放通常需要15个工作日审核，美国境外的申请者会通过 FedEx 或 DHL 寄送。</p><h2 id="付费，填写-DS-160-表格-Pay-SEVIS-take-DS-160"><a href="#付费，填写-DS-160-表格-Pay-SEVIS-take-DS-160" class="headerlink" title="付费，填写 DS-160 表格 | Pay SEVIS, take DS-160"></a>付费，填写 DS-160 表格 | Pay SEVIS, take DS-160</h2><ol><li><p>填写 I-901 表格，付SEVIS费，<a href="https://www.fmjfee.com/i901fee/index.html" target="_blank" rel="noopener">点击填写</a></p></li><li><p>填写 DS-160 表格，<a href="https://ceac.state.gov/genniv/default.aspx" target="_blank" rel="noopener">点击填写</a></p></li></ol><h2 id="付费，预约面签-Pay-and-arrange-interview"><a href="#付费，预约面签-Pay-and-arrange-interview" class="headerlink" title="付费，预约面签 | Pay and arrange interview"></a>付费，预约面签 | Pay and arrange interview</h2><ul><li><p>预约时间不能早于 I-20 上入学时间120天 | No prior to the commencement date on I-20.</p></li><li><p>最好用中信银行卡 | CITIC bank debit card is better (Chinese only)</p></li><li><p>准备好护照、DS-160、I-20，<a href="http://www.ustraveldocs.com/cn_zh/index.html" target="_blank" rel="noopener">点击填写</a>，费用160美元 | Take your passport, DS-160, I-20</p></li></ul><h2 id="面签-Interview"><a href="#面签-Interview" class="headerlink" title="面签 | Interview"></a>面签 | Interview</h2><p>身份证明 | Proof of Identity</p><ol><li>护照 passport</li><li>I-20</li><li>SEVIS 收据 novice</li><li>预约面签付费确认 interview payment novice</li><li>个人简历 resume</li></ol><p>学习证明 | Proof of Sduty</p><ol><li>录取通知 | admission letter (print it out)</li><li>TOEFL、GRE 成绩单 reports</li><li>学习计划 study plan</li><li>Head of department CV (如果没有research advisor， Nam Ling)</li></ol><p>财力证明 | Proof of Funding</p><ol><li>存款证明（最近即可，无需冻结） proof of funding</li><li>sponsor letter</li><li>银行流水？ Transactions (Necesssary?)</li></ol><p>补充证明 | Additional Proof</p><ol><li>在职证明、职业资格证书 professional cert / qualification</li><li>和父母的照片 family photo</li><li>结婚证 (Marriage License, if you have)</li></ol><p>还有到场后会发的准入证</p><p>不能带入美使领馆 | Do not take</p><ol><li>电子产品 electronic devices</li></ol><p>F-1、B-2 面签注意 | FAQs</p><ol><li>英文打招呼，表明自己准备好语言能力 using English</li><li>保持自信 be confident</li></ol><p>常见问题，可稍做准备，不要啰嗦 | frequent asking</p><ul><li>Why do you want to study in the U.S.?</li><li>Which school are you going to?</li><li>Why you choose this school?</li><li>Who is paying for the study?</li><li>What is your current job? And some follow-up detail questions about the job.</li><li>What do you want to do after the study?</li><li>Do you have any relative in U.S. ?</li><li>Where are your parents and what do they do for a living?</li><li>Do you have girlfriend/boyfriend?</li><li>Are you married?</li><li>Do you have children?</li><li>How are you going to handle it if …(you decided to go for the study alone and be separated from the girlfriend/boyfriend, husband/wife/children, etc.)</li></ul><h2 id="赴美准备"><a href="#赴美准备" class="headerlink" title="赴美准备"></a>赴美准备</h2><p>F-1 签证赴美时间可比I-20开学时间早至多30天</p><p>需随身携带：</p><ul><li>护照原件</li><li>I-20原件</li><li>录取通知书</li><li>存款证明</li><li>随身药物对应的处方</li><li>少量现金</li><li>美标手机充电器</li><li>书面紧急联系人信息</li><li>书面出行计划</li></ul><h2 id="赴美当日"><a href="#赴美当日" class="headerlink" title="赴美当日"></a>赴美当日</h2><p>过海关，准备：</p><ul><li>存款证明</li><li>回答学校相关问题<ul><li>地点</li><li>项目</li><li>就学期间住所</li><li>如何付学费</li></ul></li></ul><p>过关后：</p><ul><li>确认取回护照和 I-20 原件</li><li>确认拿到I-94(<a href="https://i94.cbp.dhs.gov/I94/#/home" target="_blank" rel="noopener">Electronic Admission Record or I-94.</a>)</li></ul><p>出机场：</p><ul><li>SJC (San Jose Airport): 机场到学校有<a href="http://www.vta.org/routes/rt10" target="_blank" rel="noopener">VTA免费班车</a>，十几分钟</li><li>SFO (San Francisco International Airport): Bay Area Rapid Transit (BART) 和 Caltrain，90分钟</li><li>OAK (Oakland International Airport): 2.5小时</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;先贴上组织-Groupchat-for-Santa-Clara-University&quot;&gt;&lt;a href=&quot;#先贴上组织-Groupchat-for-Santa-Clara-University&quot; class=&quot;headerlink&quot; title=&quot;先贴上组织 | Groupchat for Santa Clara University&quot;&gt;&lt;/a&gt;先贴上组织 | Groupchat for Santa Clara University&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;SCU 2018 QQ Group: 699733238&lt;/li&gt;
&lt;li&gt;SCU Global Telegram Group: &lt;a href=&quot;https://t.me/SCUer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://t.me/SCUer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SCU 2018 Wechat Group (If it expired let me know pls):&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&quot;/2018/02/11/SCU-Memo/SCUWeChat.jpg&quot;&gt;
    
    </summary>
    
      <category term="Academic" scheme="http://amblizer.xyz/categories/Academic/"/>
    
    
      <category term="Santa Clara University" scheme="http://amblizer.xyz/tags/Santa-Clara-University/"/>
    
      <category term="SCU" scheme="http://amblizer.xyz/tags/SCU/"/>
    
  </entry>
  
  <entry>
    <title>千昌夫 - 北国の春</title>
    <link href="http://amblizer.xyz/2018/02/09/Northern-Spring/"/>
    <id>http://amblizer.xyz/2018/02/09/Northern-Spring/</id>
    <published>2018-02-09T08:00:00.000Z</published>
    <updated>2018-10-29T08:40:33.137Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>白樺（しら　かば）　青空（あおぞら）　南風（みなみかぜ）</p><p>こぶし咲（さく）　あの丘（おか）北国（きたくに）の</p><p>ああ　北国の春（はる）</p><a id="more"></a><p>季節（きせつ）が　都会（とかい）で　はわからないだろと</p><p>届（とど）いた　ふくろの　小（ちい）さな　つつみ</p><p>あの　故郷（ふるさと）へ　帰（かえ）ろかな　帰ろかな</p><hr><img src="/2018/02/09/Northern-Spring/ikoi6350-5.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;白樺（しら　かば）　青空（あおぞら）　南風（みなみかぜ）&lt;/p&gt;
&lt;p&gt;こぶし咲（さく）　あの丘（おか）北国（きたくに）の&lt;/p&gt;
&lt;p&gt;ああ　北国の春（はる）&lt;/p&gt;
    
    </summary>
    
      <category term="Music" scheme="http://amblizer.xyz/categories/Music/"/>
    
    
      <category term="Japanese" scheme="http://amblizer.xyz/tags/Japanese/"/>
    
  </entry>
  
  <entry>
    <title>Django First Met</title>
    <link href="http://amblizer.xyz/2017/12/05/Django-First-Met/"/>
    <id>http://amblizer.xyz/2017/12/05/Django-First-Met/</id>
    <published>2017-12-05T08:00:00.000Z</published>
    <updated>2018-10-29T08:46:09.583Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>As demanded by my instructor, I need to grab the essence of Django in three weeks, which is not quite possible for a non-native CS candidate. Still, I struggled to follow the instructions given in the official document, and, well, not THAT official, that I’m actually doing a step by step tutorial in mandarin, which lags in the version of 1.10.5 instead of the newly announced 2.0. But this doesn’t trouble me at all since Anaconda also doesn’t provide the latest 2.0 update in the repertoire.</p><p>So I just began.<br><a id="more"></a></p><h2 id="Implementing-Virtual-environment"><a href="#Implementing-Virtual-environment" class="headerlink" title="Implementing Virtual environment"></a>Implementing Virtual environment</h2><p>I heard that functions in Django differ across various versions, and to save the trouble I implemented in virtual envs in Anaconda.</p><p>Simply create a new env use:</p><pre><code>&gt;conda create -n Django1</code></pre><p>Activate it:</p><pre><code>&gt;activate Django1</code></pre><p>And install the proper version of Django:</p><pre><code>(django1) &gt;conda install Django=1.10.5</code></pre><h3 id="Create-Django-Project"><a href="#Create-Django-Project" class="headerlink" title="Create Django Project"></a>Create Django Project</h3><p>In workspace directory, use:</p><pre><code>(django1) &gt;django-admin startproject blogproject</code></pre><p>Be sure to stay in the virtual env.</p><h3 id="Test-the-server"><a href="#Test-the-server" class="headerlink" title="Test the server"></a>Test the server</h3><p>To start the local server iIn blogproject directory use:</p><pre><code>(django1) &gt;python manage.py runserver</code></pre><p>Then visit localhost:8000 in a browser.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As demanded by my instructor, I need to grab the essence of Django in three weeks, which is not quite possible for a non-native CS candidate. Still, I struggled to follow the instructions given in the official document, and, well, not THAT official, that I’m actually doing a step by step tutorial in mandarin, which lags in the version of 1.10.5 instead of the newly announced 2.0. But this doesn’t trouble me at all since Anaconda also doesn’t provide the latest 2.0 update in the repertoire.&lt;/p&gt;
&lt;p&gt;So I just began.&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://amblizer.xyz/tags/python/"/>
    
      <category term="django" scheme="http://amblizer.xyz/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>テレサ．テン(邓丽君) - つぐない（偿还）</title>
    <link href="http://amblizer.xyz/2017/12/01/Repay/"/>
    <id>http://amblizer.xyz/2017/12/01/Repay/</id>
    <published>2017-12-01T08:00:00.000Z</published>
    <updated>2018-10-29T08:40:06.802Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>窓（まど）に西日（にしび）が</p><p>あたる部屋（へや）は</p><p>いつもあなたの</p><p>匂（にお）いがすろわ<br><a id="more"></a></p><p>一人（ひとり）暮（く）らせば</p><p>思（おも）い出（だ）すから</p><p>壁（かべ）の傷（きず）も</p><p>残（のこ）したまま</p><p>おいてゆくわ</p><hr><p>愛をつぐなえば</p><p>别(わか)れになるけど</p><p>こんな女（おんな）でも</p><p>忘（わす）れないでね</p><p>優（やさ）しいすぎたのあなた</p><p>子供（こども）見（み）たいなあなた</p><p>明日（あす）は他人同士（たにんどうし）に</p><p>なるけれど</p><hr><p>心(こころ)残(のこ)りは</p><p>あなたのこと</p><p>少(すこ)し烟草(たばこ)も</p><p>ひかえめにして</p><p>过去(かこ)に缚(しば)られ</p><p>暮(く)らすことより</p><p>わたしよりも可爱(かわい)い人</p><p>探(さが)すことよ</p><hr><p>爱(あい)をつぐなえば</p><p>重荷(おもに)になるから</p><p>この町(まち)を离(はな)れ</p><p>暮(く)らしてみるわ</p><p>お酒(さけ)のむのも ひとり</p><p>梦(ゆめ)を见(み)るのも ひとり</p><p>明日（あす）は他人同士（たにんどうし</p><p>なるけれど</p><hr><p>爱(あい)をつぐなえば</p><p>别(わか)れになるけど</p><p>こんな女(おんな)でも</p><p>忘(わす)れないでね</p><p>優(やさ)しいすぎたのあなた</p><p>子供(こども)见(み)たいなあなた</p><p>明日(あす)は他人同志(たにんどうし)に</p><p>なるけれど</p><img src="/2017/12/01/Repay/Teng.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;窓（まど）に西日（にしび）が&lt;/p&gt;
&lt;p&gt;あたる部屋（へや）は&lt;/p&gt;
&lt;p&gt;いつもあなたの&lt;/p&gt;
&lt;p&gt;匂（にお）いがすろわ&lt;br&gt;
    
    </summary>
    
      <category term="Music" scheme="http://amblizer.xyz/categories/Music/"/>
    
    
      <category term="Japanese" scheme="http://amblizer.xyz/tags/Japanese/"/>
    
  </entry>
  
  <entry>
    <title>中岛みゆき - 竹の歌</title>
    <link href="http://amblizer.xyz/2017/11/02/Bamboo-Song/"/>
    <id>http://amblizer.xyz/2017/11/02/Bamboo-Song/</id>
    <published>2017-11-02T07:00:00.000Z</published>
    <updated>2018-10-29T08:33:08.584Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Started to learn Japanese, hiragana seems a bit of troubling of its resembling of mandarin characters. Though being nervous these days, Jap songs, especially those from 80s and 90s, comfort me most, and it is an major cause for me to learn the language. So start with a rather easy one, the bamboo song by Miyuki Nakajima<br><a id="more"></a></p><hr><p>遥（はる）かな山（やま）から吹（ふ）きつける風（かぜ）に</p><p>ひれ伏（ふ）しながら　けして折（お）れはせぬ</p><p>押（お）し寄（よ）せる雲（くも）から打ちやまぬ雨（あめ）に</p><p>ひれ伏（ふ）しながら　けして折（お）れはせぬ</p><p>私（わたし）がなりたいものはといえば</p><p>地下（ちか）に根（ね）を張（は）る　あの竹林（たけばやし）</p><hr><p>月（つき）の日（ひ）　火（ひ）の日（ひ）　水（みず）の日（ひ）　木（き）の日（ひ）</p><p>金（がね）に踊（おど）って　土（つち）と日（ひ）に還（かえ）る</p><p>私（わたし）が住（す）みたい国（くに）はといえば</p><p>地下（ちか）に根（ね）を張（は）る　あの竹（たけ）の国（くに）</p><hr><p>ゆく夏（なつ）来（く）る夏（なつ）　照（で）りつける熱（ねつ）に</p><p>埋（う）ずもれながら　けして消（き）えはせぬ</p><p>青（あお）に黄（き）に緑（みどり）に　移（うつ）りゆく旗（はた）に</p><p>移（うつ）ろいながら　けして消（き）えはせぬ</p><p>私（わたし）が覚（おぼ）えて残（のこ）せるものは</p><p>地下（ちか）に根（ね）を張（は）る　あの竹（たけ）の歌（うた）</p><hr><p>月（つき）の日（ひ）　火（ひ）の日（ひ）　水（みず）の日（ひ）　木（き）の日（ひ）</p><p>金（がね）に踊（おど）って　土（つち）と日（ひ）に還（かえ）る</p><p>私（わたし）が覚（おぼ）えて残（のこ）せるものは </p><p>地下（ちか）に根（ね）を張（は）る　あの竹（たけ）の歌（うた）</p><hr><p>月（つき）の日（ひ）　火（ひ）の日（ひ）　水（みず）の日（ひ）　木（き）の日（ひ）</p><p>金（がね）に踊（おど）って　土（つち）と日（ひ）に還（かえ）る</p><p>私（わたし）がなりたいものはといえば</p><p>地下（ちか）に根（ね）を張（は）る　あの竹林（たけばやし）</p><img src="/2017/11/02/Bamboo-Song/yakai_main.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Started to learn Japanese, hiragana seems a bit of troubling of its resembling of mandarin characters. Though being nervous these days, Jap songs, especially those from 80s and 90s, comfort me most, and it is an major cause for me to learn the language. So start with a rather easy one, the bamboo song by Miyuki Nakajima&lt;br&gt;
    
    </summary>
    
      <category term="Music" scheme="http://amblizer.xyz/categories/Music/"/>
    
    
      <category term="Japanese" scheme="http://amblizer.xyz/tags/Japanese/"/>
    
  </entry>
  
  <entry>
    <title>Saving loop 保存与循环</title>
    <link href="http://amblizer.xyz/2017/06/10/Saving-loop/"/>
    <id>http://amblizer.xyz/2017/06/10/Saving-loop/</id>
    <published>2017-06-10T07:00:00.000Z</published>
    <updated>2018-10-29T08:35:32.539Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>#Saving loop 保存与循环</p><p>The loop ends only when successively saved<br><a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> unsaved:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        wb.save(fn)</span><br><span class="line">        unsaved = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> PermissionError:</span><br><span class="line">        print(fn, <span class="string">'in use, close and press enter to save again...'</span>)</span><br><span class="line">        input()</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>anything else？</p><img src="/2017/06/10/Saving-loop/Loop_logo.png">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#Saving loop 保存与循环&lt;/p&gt;
&lt;p&gt;The loop ends only when successively saved&lt;br&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://amblizer.xyz/categories/Algorithm/"/>
    
    
      <category term="python" scheme="http://amblizer.xyz/tags/python/"/>
    
      <category term="save" scheme="http://amblizer.xyz/tags/save/"/>
    
  </entry>
  
  <entry>
    <title>Install Cuda 8/CuDNN 6, Tensorflow and Keras on Windows 10</title>
    <link href="http://amblizer.xyz/2017/06/01/Win10-Cuda-TF/"/>
    <id>http://amblizer.xyz/2017/06/01/Win10-Cuda-TF/</id>
    <published>2017-06-01T07:00:00.000Z</published>
    <updated>2018-10-29T08:46:53.974Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>[Windows 10 安装 Cuda 8 + CuDNN 6, Tensorflow 和 keras，附CPU/GPU切换小技巧]</p><p>Updated: Dec 29, 2017</p><p>Originally published on <a href="http://amblizer.xyz/2017/06/01/Windows-10-Cuda-Tensorflow-Keras/">Amblizer.xyz</a>, reblogged in case of blocking</p><p>I’ve tried months ago to install the GPU-based Machine learning framework, namely keras with tensorflow, but get stuck following the official indication of the latter, and the issue remained unresolved until yesterday because of loads of patients in summer vocation, and I finally managed to get m1000m working.<br><a id="more"></a></p><p>I basically followed instructions written in Chinese in <a href="http://blog.csdn.net/u012898521/article/details/69611800" target="_blank" rel="noopener">http://blog.csdn.net/u012898521/article/details/69611800</a>, with a few modifications according to keras documentation in Chinese HERE, and actually I did a combination of both.</p><img src="/2017/06/01/Win10-Cuda-TF/2017-07-19_logo.jpg" title="Tensorflow logo"><h2 id="Step-1-Python-with-Anaconda"><a href="#Step-1-Python-with-Anaconda" class="headerlink" title="Step 1 - Python with Anaconda"></a>Step 1 - Python with Anaconda</h2><p><del>By far tensorflow only support python 3 but no newer than major version of 3.5, and last time I got a lot of trouble tried to install the dependencies especially scipy. I didn’t use anaconda because it starts rather slow and Google said you could install tensorflow without it, and it was later I found scipy itself WILL encounter problems when installed on windows.</del></p><p>Just <a href="https://www.anaconda.com/download/?lang=en-us" target="_blank" rel="noopener">download and intall Anaconda 5.0 with python 3</a>, </p><img src="/2017/06/01/Win10-Cuda-TF/2017-07-19_01.jpg" title="Anaconda"><p>Simply install Anaconda with python <del>3.5 (I installed Anaconda 4.2.0 with python 3.5.2)</del> 3.6, and it will save you all the troubles.</p><h2 id="Step-2-—-CUDA-and-CuDNN"><a href="#Step-2-—-CUDA-and-CuDNN" class="headerlink" title="Step 2 — CUDA and CuDNN"></a>Step 2 — CUDA and CuDNN</h2><p>NVIDIA had buried download links to older version of CUDA and CuDNN, so I list the links chart first.</p><table><thead><tr><th>Package</th><th>Compatible with</th><th>Link</th></tr></thead><tbody><tr><td>CUDA 9.1</td><td>self-compiled Tensor Flow</td><td><a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener">Click to download</a></td></tr><tr><td>CUDA 8.0.61 &amp; prior</td><td>TensorFlow</td><td><a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">Click to download</a></td></tr><tr><td>CuDNN 6</td><td>TensorFlow</td><td><a href="http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v6/prod/8.0_20170427/cudnn-8.0-windows10-x64-v6.0.zip" target="_blank" rel="noopener">Click to download</a></td></tr><tr><td>CuDNN 5 &amp; prior</td><td>Theano, etc</td><td><a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">Click to download</a></td></tr></tbody></table><p>CUDA is toolkit enables you to all the fun programming with NVIDIA GPU, you’re welcomed unless your GPU is prior to GTX 500 series.</p><p>You’re encouraged to download <a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">CUDA 8.0.61</a> and <a href="http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v6/prod/8.0_20170427/cudnn-8.0-windows10-x64-v6.0.zip" target="_blank" rel="noopener">CuDNN 6</a> in order to drive TensorFlow 1.4, and you’ll find it somewhat time consuming.</p><img src="/2017/06/01/Win10-Cuda-TF/2017-07-19_02.jpg" title="CUDA Toolkit"><p>Installation is simple a series of ‘Next’s.</p><p>And now you can install CuDNN, an acceleration library for CUDA. You’ll require to signed a developer account in order to get it HERE, and then unzip the folders and overwrite folders at</p><pre><code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\8.0</code></pre><p>with same names.</p><h2 id="Step-3-—-Ananconda-Environment-amp-Tensorflow"><a href="#Step-3-—-Ananconda-Environment-amp-Tensorflow" class="headerlink" title="Step 3 — Ananconda Environment &amp; Tensorflow"></a>Step 3 — Ananconda Environment &amp; Tensorflow</h2><p><del>Simply use pip with installation.</del></p><p>Create an Ananconda environment named “tf” using:</p><pre><code>&gt;conda create -n tf</code></pre><p>And activate the envirionmant by:</p><pre><code>&gt;activate tf</code></pre><p>Then the command shows:</p><pre><code>(tf) C:\Users\username&gt;_</code></pre><p>which indicates that you have entered the newly create environment. By using the environment, we can capsule our manuvours within the very space, without influencing that global configuration of the whole system. This is especally useful when you’re testing different versions of same software packages, say, using python 3.5 &amp; 3.6 samultanously.</p><p>To install CPU version(required):</p><pre><code>(tf) C:\Users\username&gt;conda install tensorflow</code></pre><p>Test the CPU version tensorflow:</p><pre><code>(tf) C:\Users\username&gt;python&gt;&gt;&gt;import tensorflow as tf</code></pre><p>To install GPU version(optional)</p><pre><code>(tf) C:\Users\username&gt;conda install tensorflow-gpu</code></pre><p>Restart first and then test the GPU version tensorflow:</p><pre><code>(tf) C:\Users\username&gt;python&gt;&gt;&gt;import tensorflow as tf</code></pre><h2 id="Step-4-—-Keras"><a href="#Step-4-—-Keras" class="headerlink" title="Step 4 — Keras"></a>Step 4 — Keras</h2><p>A line of code will do</p><pre><code>(tf) C:\Users\username&gt;conda install keras</code></pre><p>Keras will be installed with theano by default, but it will use tensorflow as the back-end, so don’t panic, and test if keras is installed correctly by</p><pre><code>(tf) C:\Users\username&gt;python&gt;&gt;&gt;import keras</code></pre><p>Now we could run the MNIST example in Keras with either CPU or GPU</p><h2 id="Step-5-—-Run-and-switch-between-CPU-and-GPU"><a href="#Step-5-—-Run-and-switch-between-CPU-and-GPU" class="headerlink" title="Step 5 — Run and switch between CPU and GPU"></a>Step 5 — Run and switch between CPU and GPU</h2><p>Download keras testing data sets <a href="https://github.com/fchollet/keras.git" target="_blank" rel="noopener">HERE</a>, or if you have git run</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/fchollet/keras.git</span><br></pre></td></tr></table></figure><p>Locate at <code>keras/examples/</code>, and run <code>mnist_mlp.py</code>, if you installed CUDA and CuDNN correctly, it will run on GPU by default, and here’s my running on GPU:</p><img src="/2017/06/01/Win10-Cuda-TF/2017-07-19_03.jpg" title="MNIST Test"><p>Sadly I only have a M1000M on the laptop, of which the performance is compromised. </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[Windows 10 安装 Cuda 8 + CuDNN 6, Tensorflow 和 keras，附CPU/GPU切换小技巧]&lt;/p&gt;
&lt;p&gt;Updated: Dec 29, 2017&lt;/p&gt;
&lt;p&gt;Originally published on &lt;a href=&quot;http://amblizer.xyz/2017/06/01/Windows-10-Cuda-Tensorflow-Keras/&quot;&gt;Amblizer.xyz&lt;/a&gt;, reblogged in case of blocking&lt;/p&gt;
&lt;p&gt;I’ve tried months ago to install the GPU-based Machine learning framework, namely keras with tensorflow, but get stuck following the official indication of the latter, and the issue remained unresolved until yesterday because of loads of patients in summer vocation, and I finally managed to get m1000m working.&lt;br&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="http://amblizer.xyz/categories/Machine-Learning/"/>
    
    
      <category term="python" scheme="http://amblizer.xyz/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Alphabet in One Line</title>
    <link href="http://amblizer.xyz/2017/02/15/Alphabet/"/>
    <id>http://amblizer.xyz/2017/02/15/Alphabet/</id>
    <published>2017-02-15T08:00:00.000Z</published>
    <updated>2018-10-29T08:43:36.038Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>#List<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>)]</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>]</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>#String<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>)])</span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br></pre></td></tr></table></figure></p><p>#two lines<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> string</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.ascii_lowercase</span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br></pre></td></tr></table></figure></p><p>#dict两句话<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict.fromkeys(string.ascii_lowercase, <span class="number">0</span>)</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">0</span>, <span class="string">'b'</span>: <span class="number">0</span>, <span class="string">'c'</span>: <span class="number">0</span>, <span class="string">'d'</span>: <span class="number">0</span>, <span class="string">'e'</span>: <span class="number">0</span>, <span class="string">'f'</span>: <span class="number">0</span>, <span class="string">'g'</span>: <span class="number">0</span>, <span class="string">'h'</span>: <span class="number">0</span>, <span class="string">'i'</span>: <span class="number">0</span>, <span class="string">'j'</span>: <span class="number">0</span>, <span class="string">'k'</span>: <span class="number">0</span>, <span class="string">'l'</span>: <span class="number">0</span>, <span class="string">'m'</span>: <span class="number">0</span>, <span class="string">'n'</span>: <span class="number">0</span>, <span class="string">'o'</span>: <span class="number">0</span>, <span class="string">'p'</span>: <span class="number">0</span>, <span class="string">'q'</span>: <span class="number">0</span>, <span class="string">'r'</span>: <span class="number">0</span>, <span class="string">'s'</span>: <span class="number">0</span>, <span class="string">'t'</span>: <span class="number">0</span>, <span class="string">'u'</span>: <span class="number">0</span>, <span class="string">'v'</span>: <span class="number">0</span>, <span class="string">'w'</span>: <span class="number">0</span>, <span class="string">'x'</span>: <span class="number">0</span>, <span class="string">'y'</span>: <span class="number">0</span>, <span class="string">'z'</span>: <span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure></p><p>Fun isn’t it!</p><img src="/2017/02/15/Alphabet/Alpha.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#List&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;[chr(i) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;d&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;e&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;g&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;h&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;i&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;k&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;l&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;n&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;o&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;p&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;q&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;s&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;t&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;u&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;v&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;z&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://amblizer.xyz/categories/Algorithm/"/>
    
    
      <category term="python" scheme="http://amblizer.xyz/tags/python/"/>
    
      <category term="alphabet" scheme="http://amblizer.xyz/tags/alphabet/"/>
    
  </entry>
  
  <entry>
    <title>Fisher–Yates shuffle</title>
    <link href="http://amblizer.xyz/2017/02/01/Fisher%E2%80%93Yates/"/>
    <id>http://amblizer.xyz/2017/02/01/Fisher–Yates/</id>
    <published>2017-02-01T08:00:00.000Z</published>
    <updated>2018-10-29T08:41:41.934Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>作为编程新手，又非本专业所学，在github上写博客似乎不自量力。然而记录本身也是学习的一部分，而这记录非此处不能写，那就开始吧。</p><p>在 <a href="https://www.w3cplus.com/javascript/shuffling-array-js.html" target="_blank" rel="noopener">w3cplus</a> 看到洗牌算法似乎十分有趣，试着用python练习一下：<br><a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shuffle</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    From last item to first item, change position with a random item before it.</span></span><br><span class="line"><span class="string">    s: list of items</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    i = len(s) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">        ran = random.sample(range(i),<span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">        (s[ran],s[i]) = (s[i],s[ran])</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;shuffle(<span class="string">"['1', '2', '3', '4', '5', '6', '7', '8', '9']"</span>)</span><br><span class="line">[<span class="string">'4'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'6'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'9'</span>, <span class="string">'5'</span>]</span><br><span class="line">&gt;&gt;&gt;shuffle(<span class="string">"['1', '2', '3', '4', '5', '6', '7', '8', '9']"</span>)</span><br><span class="line">[<span class="string">'8'</span>, <span class="string">'3'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'9'</span>, <span class="string">'7'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>]</span><br><span class="line">&gt;&gt;&gt;shuffle(<span class="string">"['1', '2', '3', '4', '5', '6', '7', '8', '9']"</span>)</span><br><span class="line">[<span class="string">'9'</span>, <span class="string">'7'</span>, <span class="string">'1'</span>, <span class="string">'3'</span>, <span class="string">'2'</span>, <span class="string">'8'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>]</span><br></pre></td></tr></table></figure><p>还是挺好玩的嘛！</p><img src="/2017/02/01/Fisher–Yates/perform_swap.png">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为编程新手，又非本专业所学，在github上写博客似乎不自量力。然而记录本身也是学习的一部分，而这记录非此处不能写，那就开始吧。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&quot;https://www.w3cplus.com/javascript/shuffling-array-js.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;w3cplus&lt;/a&gt; 看到洗牌算法似乎十分有趣，试着用python练习一下：&lt;br&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://amblizer.xyz/categories/Algorithm/"/>
    
    
      <category term="Fisher–Yates shuffle" scheme="http://amblizer.xyz/tags/Fisher%E2%80%93Yates-shuffle/"/>
    
      <category term="algorithm" scheme="http://amblizer.xyz/tags/algorithm/"/>
    
      <category term="python" scheme="http://amblizer.xyz/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Win 10 廉价指纹方案：EgisTec ES603</title>
    <link href="http://amblizer.xyz/2016/03/16/Win10-Fingerprint/"/>
    <id>http://amblizer.xyz/2016/03/16/Win10-Fingerprint/</id>
    <published>2016-03-16T20:13:43.000Z</published>
    <updated>2018-10-29T16:34:05.257Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>​​最近突然有给电脑配指纹验证的想法，经过一番折腾，最后百元之内完美启用Wind 10 hello的指纹登陆。</p><p>硬件：EgisTec ES603，淘宝搜索即可，70元左右</p><a id="more"></a><p>驱动：这一步是关键，随机附带的驱动为非WBF（Windows Biometric Framework）版本，只能通过第三方软件配合使用。一番搜索后发现此模块和TravelMate P446-M的指纹模块驱动一致，恰巧Acer在官网发布了其支持Win 10 x64的WBF版本驱动，下载安装后重启即可。进入登陆选项，设置Pin之后即可使用，如下图：</p><img src="/2016/03/16/Win10-Fingerprint/1.jpg"><p><br><br><img src="/2016/03/16/Win10-Fingerprint/2.jpg"><br><br><br><img src="/2016/03/16/Win10-Fingerprint/3.jpg"></p><p><a href="http://global-download.acer.com/GDFiles/Driver/Fingerprint/Fingerprint_STMicro_3.5.1.0_W10x64_A.zip?acerid=635878162345569420&amp;Step1=NOTEBOOK&amp;Step2=TRAVELMATE&amp;Step3=TRAVELMATE%20P446-M&amp;OS=10M1&amp;LC=en&amp;BC=ACER&amp;SC=PA_6" target="_blank" rel="noopener">点击下载驱动</a></p><p>嗯，的确是物美价廉。​​​​</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​​最近突然有给电脑配指纹验证的想法，经过一番折腾，最后百元之内完美启用Wind 10 hello的指纹登陆。&lt;/p&gt;
&lt;p&gt;硬件：EgisTec ES603，淘宝搜索即可，70元左右&lt;/p&gt;
    
    </summary>
    
      <category term="Miscellaneous" scheme="http://amblizer.xyz/categories/Miscellaneous/"/>
    
    
      <category term="Fingerprint" scheme="http://amblizer.xyz/tags/Fingerprint/"/>
    
      <category term="Windows 10" scheme="http://amblizer.xyz/tags/Windows-10/"/>
    
  </entry>
  
</feed>
